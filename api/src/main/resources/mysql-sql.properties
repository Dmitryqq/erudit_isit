queries.GET_NEWS = SELECT n.*, nt.name as type_name, \
                    (SELECT name FROM news_images WHERE news_id = n.id ORDER BY is_main DESC LIMIT 1) image_name FROM news n  \
                    JOIN news_types nt ON nt.id = n.type_id \
                    ORDER BY n.create_date DESC LIMIT :limit OFFSET :offset
queries.GET_SINGLE_NEWS = SELECT n.*, nt.name as type_name, \
                    (SELECT GROUP_CONCAT(name SEPARATOR ';') FROM news_images WHERE news_id = n.id ORDER BY is_main) images FROM news n  \
                    JOIN news_types nt ON nt.id = n.type_id \
                    WHERE n.url = :url
queries.GET_MAIN_REVIEWS = SELECT * FROM reviews LIMIT 3

queries.GET_ROLES = SELECT * FROM roles
queries.GET_SUBJECTS = SELECT * FROM subjects
queries.GET_GRADE_TYPES = SELECT * FROM grade_types
queries.GET_CLASSES = SELECT * FROM classes
queries.GET_USERS = SELECT u.id, u.username, u.name, u.surname, u.patronymic, r.id AS r_id, r.code AS r_code, r.name AS r_name, u.locked, u.create_date FROM users u \
                    JOIN roles r ON r.id = u.role_id
queries.GET_USER_DETAILS = SELECT u.id, u.username, u.name, u.surname, u.patronymic, r.id AS r_id, r.code AS r_code, r.name AS r_name,  \
                        u.locked, u.birth_date, u.create_date,  \
                        (SELECT class_id FROM user_student WHERE user_id = u.id) student_class_id, \
                        (SELECT GROUP_CONCAT(class_id SEPARATOR ';') FROM user_teacher_classes WHERE user_id = u.id) teacher_classes_ids, \
                        (SELECT GROUP_CONCAT(subject_id SEPARATOR ';') FROM user_teacher_subjects WHERE user_id = u.id) teacher_subjects_ids, \
                        (SELECT GROUP_CONCAT(concat(subject_id, '_', class_id) SEPARATOR ';') FROM user_teacher_subject_and_class WHERE user_id = u.id) teacher_subject_classes_ids \
                        FROM users u  \
                        JOIN roles r ON r.id = u.role_id \
                        WHERE u.id = :id


queries.GET_USER_BY_USERNAME_PASS = SELECT u.id, u.username, u.name, u.surname, u.patronymic, r.code AS role_code, u.password, u.locked FROM users u \
                                    JOIN roles r ON r.id = u.role_id \
                                    WHERE u.username = :username

queries.INSERT_CLASS = INSERT INTO classes(number,letter) VALUES (?,?)
queries.INSERT_GRADE_TYPE = INSERT INTO grade_types(name,weight) VALUES (?,?)
queries.INSERT_SUBJECT = INSERT INTO subjects(name) VALUES (?)
queries.INSERT_USER = INSERT INTO users(username,name,surname,patronymic,password,role_id,birth_date) VALUES (?,?,?,?,?,?,?)
queries.INSERT_USER_STUDENT = INSERT INTO user_student(user_id,class_id) VALUES (:user_id,:class_id)
queries.INSERT_USER_TEACHER_CLASSES = INSERT INTO user_teacher_classes(user_id,class_id) VALUES (?,?)
queries.INSERT_USER_TEACHER_SUBJECTS = INSERT INTO user_teacher_subjects(user_id,subject_id) VALUES (?,?)
queries.INSERT_USER_TEACHER_SUBJECTS_CLASSES = INSERT INTO user_teacher_subject_and_class(user_id,subject_id,class_id) VALUES (?,?,?)

queries.UPDATE_CLASS = UPDATE classes SET number = :number, letter = :letter WHERE id = :id
queries.UPDATE_GRADE_TYPE = UPDATE grade_types SET name = :name, weight = :weight WHERE id = :id
queries.UPDATE_SUBJECT = UPDATE subjects SET name = :name WHERE id = :id

queries.DELETE_CLASS = DELETE FROM classes WHERE id = :id
queries.DELETE_GRADE_TYPE = DELETE FROM grade_types WHERE id = :id
queries.DELETE_SUBJECT = DELETE FROM subjects WHERE id = :id
queries.DELETE_USER = DELETE FROM users WHERE id = :id


queries.CHANGE_USER_LOCK = UPDATE users SET locked = :locked WHERE id = :id